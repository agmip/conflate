Format: 1A

# AgMIP ACE Database API
The AgMIP ACE Database API is used to provide a standard interface to a Riak instance. This interface is used to:

* Upload AgMIP ACE data (inputs, ouputs, and overlays).
* Search AgMIP ACE data (inputs, outputs)
* Download AgMIP ACE data (inputs, outputs, and overlays).

# Group Uploading Data
The process for uploading data is as follows:

1. Send files and request an upload token.
2. Request additional information (missing suggested fields, general metadata)
3. Verify and update the upload.

## Upload Token Resource [/ace/1/dataset]
Send file(s) to server for processing. Any combination of the files can be uploaded, but at least
one of the files needs to be present. If processing is successful, an upload token is returned which 
can be used to track and update this upload.

### Request Upload Token [POST]
The upload token provided by this resource can be polled via `GET` request to receive it's current
state, or can be sent a `POST` request and be used to update the underlying data prior to storage.

#### Parameters

* **aceb** - *optional* - ACE Binary File
* **dome** - *optional* - DOME Binary File
* **acmo** - *optional* - ACMO CSV File


+ Request

    + Header
            
            Content-type: multipart/form-data; boundary="---abc123"
            X-AgmipAuthToken: user_token
            
    + Body
    
            ---abc123
            Content-Disposition: form-data; name="aceb"; filename="data.aceb"
            Content-Type: application/gzip
            ... file data here ...
            ---abc123
            Content-Disposition: form-data; name="dome"; filename="overlay.dome"
            Content-Type: application/gzip
            ... file data here ...
            ---abc123
            Content-Disposition: form-data; name="acmo"; filename="outputs.csv"
            Content-Type: text/plain
            ... file data here ...
            ---abc123

+ Response 202 (application/json)

        {"upload_token": token}
        
+ Response 400 (application/json)

        {"error": "No files uploaded."}

+ Response 401 (application/json)

        {"error": "No user authentication token provided."}

## Upload Resource [/ace/1/dataset/{token}]
Once a upload token is received, it can be used to check the current status of the upload, query
for missing suggested fields, update those fields and perform final submission of the upload to the
database.

### Check Upload State [GET]
+ Request

    + Header
            
            X-AgmipAuthToken: user_token
    
+ Response 200 (application/json)

        {}

+ Response 201 (application/json)

        {"state":"submitted"}

+ Response 202 (application/json)

        {"state":"processing"}

+ Response 400 (application/json)

        {"state":"failed", "error": human_readable_error, "details": [reasons_for_failing]}

+ Response 401 (application/json)

        {"state":"unknown", "error":"No user authentication token provided"}

+ Response 403 (application/json)

        {"state":"unknown", "error":"User not authorized to see this upload"}

+ Response 404 (application/json)

        {"state":"unknown", "error":"Invalid upload token"}
        
+ Response 500 (application/json)

        {"state":"unknown", "error":"A server error has occurred."}

### Update Upload Data [POST]
+ Request (application/json)
    
    + Header
    
            X-AgmipAuthToken: user_token

    + Body
    
            {}

+ Response 202 (application/json)
    
        {"state":"processing"}

+ Response 400 (application/json)
    
        {"error":human_readable_error}

+ Response 401 (application/json)

        {"error":"No user authentication token provided"}

+ Response 403 (application/json)
        
        {"error":"User not authorized to update this upload"}

+ Response 404 (application/json)

        {"error":"Invalid upload token"}

+ Response 500 (application/json)

        {"error":"A server error has occurred."}
        
### Cancel Upload [DELETE]
+ Request
    
    + Header
    
            X-AgmipAuthToken: user_token

    + Body
        
            

+ Response 204

+ Response 401 (application/json)

        {"error":"No user authentication token provided"}

+ Response 403 (application/json)
    
        {"error":"User not authorized to update this upload"}

+ Response 404 (application/json)

        {"error":"Invalid upload token"}
        
+ Response 500 (application/json)

        {"error":"A server error has occurred."}